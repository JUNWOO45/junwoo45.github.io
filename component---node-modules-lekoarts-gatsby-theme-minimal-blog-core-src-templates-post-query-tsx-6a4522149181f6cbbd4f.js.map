{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-6a4522149181f6cbbd4f.js","mappings":"yNA6BA,EAFmB,SAAC,GAAD,oBCSbA,EADK,CAAC,OAAD,aAAX,OACe,KAAO,+DAsCtB,EApCa,SAAC,GAAD,UAAWC,EAAX,mBACX,kBACE,aACEC,MAAOD,EADT,MAEEE,YAAaF,EAAAA,YAAmBA,EAAnBA,YAAsCA,EAFrD,QAGEG,MAAOH,EAAAA,OAAAA,QAAAA,EAAcA,EAAdA,cAAAA,IAAAA,GAAAA,QAAAA,EAAcA,EAAdA,uBAAAA,IAAAA,GAAAA,QAAAA,EAAcA,EAAdA,cAAAA,IAAAA,OAAAA,EAAcA,EAAdA,SAHT,EAIEI,SAAUJ,EAJZ,KAKEK,aAAcL,EAAKK,gBAErB,cAASC,GAAT,KAAiBC,QAAQ,aACtBP,EATL,QAWE,aAAGQ,GAAI,CAAEC,MAAF,YAAsBC,GAAtB,EAA6BC,EAAG,CAAEF,MAAM,aAAgBG,SAAU,CAAC,EAAE,EAAH,MACvE,oBAAOZ,EADT,MAEGA,EAAAA,OACC,QAAC,WAAD,YAEE,aAAUa,KAAMb,EAAKa,QAGxBb,EAAAA,YARH,MASGA,EAAAA,aAAmB,oBAAOA,EAAP,WApBxB,eAsBE,mBACEQ,GAAI,CACFM,GADE,EAEF,6BAA8B,CAAEA,GAAI,CAAC,EAAE,EAAT,GAAiBC,UAAWhB,EAAAA,KAAAA,OAC1DQ,QAAQ,oBAGV,2BAAcP,EA7BlB,QA+BE,WAAYA,KAAMA,MCnEtB,MCQe,SAA6B,GAAsB,IAAjBgB,EAAgB,oBAC/D,OAAO,kBAAP,K,wTCmBF,IAjBiB,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,KAClB,GAA+BI,EAAAA,EAAAA,KAAvBC,EAAR,WAAkBC,EAAlB,WAEA,OACE,QAAC,WAAD,KACGN,EAAA,KAAS,qBACR,QAAC,WAAD,CAAgBO,IAAKC,EAAIC,QACtB,GADH,MAEE,gBAAMd,GAAI,yB,qWAAA,cAAae,EAAb,2BAAaA,EAAb,IAA6BC,IAAIC,EAAAA,EAAAA,GAAe,IAAD,YAA6BJ,EAA7B,OACtDA,EAJG","sources":["webpack://박준우블로그/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://박준우블로그/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://박준우블로그/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://박준우블로그/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://박준우블로그/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\n\ntype PostFooterProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    body: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst PostFooter = ({ post }: PostFooterProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\ntype PostProps = {\n  data: {\n    post: {\n      slug: string\n      title: string\n      date: string\n      tags?: {\n        name: string\n        slug: string\n      }[]\n      description?: string\n      canonicalUrl?: string\n      body: string\n      excerpt: string\n      timeToRead?: number\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string\n          }\n        }\n      }\n    }\n  }\n}\n\nconst px = [`32px`, `16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`)\n\nconst Post = ({ data: { post } }: PostProps) => (\n  <Layout>\n    <Seo\n      title={post.title}\n      description={post.description ? post.description : post.excerpt}\n      image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n      pathname={post.slug}\n      canonicalUrl={post.canonicalUrl}\n    />\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": { my: [4, 4, 5], boxShadow: shadow.join(`, `) },\n        variant: `layout.content`,\n      }}\n    >\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n","import { graphql } from \"gatsby\"\nimport PostComponent from \"../components/post\"\n\nexport default PostComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    post(slug: { eq: $slug }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      description\n      canonicalUrl\n      body\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Post from \"../../../components/post\"\n\ntype Props = {\n  data: {\n    post: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCorePost({ ...props }: Props) {\n  return <Post {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["shadow","post","title","description","image","pathname","canonicalUrl","as","variant","sx","color","mt","a","fontSize","tags","my","boxShadow","props","useMinimalBlogConfig","tagsPath","basePath","key","tag","slug","t","to","replaceSlashes"],"sourceRoot":""}